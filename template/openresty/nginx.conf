user  nobody;

# Set the worker processes based on the number of CPU cores
# Setting to `auto` will calculate it automatically
worker_processes  auto;

events {
    # Determines how many clients will be served by one worker
    # max clients = worker_connections * worker_processes
    # max clients is also limited by the number of socket connections available on the system (~64k)
    worker_connections  1024;
    # Optmized to serve many clients with each thread
    use epoll;
    # Accept as many connections as possible
    multi_accept on;
}

http {
    # Enable the cross-site scripting (XSS) filter
    add_header x-xss-protection "1; mode=block" always;
    # Provides clickjacking protection
    add_header x-frame-options "SAMEORIGIN" always;
    # Prevents Internet Explorer and Google Chrome from sniffing a response away from the declared content-type
    add_header x-content-type-options "nosniff" always;

    include       mime.types;
    default_type  application/octet-stream;

    # Copy data between file descriptors within the kernel
    # Faster then read() + write()
    sendfile 		on;
    sendfile_max_chunk 512k;

    # Send all headers at once
    tcp_nopush		on;

    # Don't buffer data when sending. Good for small data bursts in real time
    tcp_nodelay		on;

    server {
        access_log /dev/stdout;

        listen 80 default_server;
        listen [::]:80 default_server;

        # Enables or disables emitting nginx version on error pages and in the “Server” response header field.
        server_tokens	off;

        root html;
        index index.html;

        location / {
            if ($http_user_agent ~* ".*GoogleHC.*") {
                return 200;
            }
            try_files $uri $uri/ @rewrites;
        }

        location ~ assets/(.*)$ {
            alias html/assets/$1;
        }

        location @rewrites {
            rewrite ^(.+)$ /index.html last;
        }

        # Some basic cache-control for static files to be sent to the browser
        location ~* \.(?:ico|css|js|gif|jpe?g|png|svg)$ {
            expires 24h;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
    }
}
